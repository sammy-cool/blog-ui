{"ast":null,"code":"var _jsxFileName = \"/home/priyanshu/Desktop/react/blog-ui/src/components/blogger/PostShow.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass PostShow extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {},\n      post: {},\n      comments: []\n    };\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    const postUrl = `https://jsonplaceholder.typicode.com/posts/${id}`;\n    axios.get(postUrl).then(response => {\n      let post = response.data;\n      this.setState({\n        post\n      });\n      const userUrl = `https://jsonplaceholder.typicode.com/users/${post.userId}`;\n      axios.get(userUrl).then(response => {\n        let user = response.data;\n        this.setState({\n          user\n        });\n      });\n    });\n    const commentsUrl = `https://jsonplaceholder.typicode.com/comments?postId=${id}`;\n    axios.get(commentsUrl).then(response => {\n      let comments = response.data;\n      this.setState({\n        comments\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \"USERNAME: \", this.state.user.name), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"TITLE: \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 28\n      }\n    }, \" \", this.state.post.title, \" \"), \" \"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"BODY:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, this.state.post.body)), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"COMMENTS\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, this.state.comments.map(comment => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: comment.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 36\n        }\n      }, comment.body);\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Link, {\n      to: `/users/${this.state.user.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \" More Posts of author: \", this.state.user.name, \" \"), \" \"));\n  }\n\n}\n\nexport default PostShow;","map":{"version":3,"sources":["/home/priyanshu/Desktop/react/blog-ui/src/components/blogger/PostShow.js"],"names":["React","Link","axios","PostShow","Component","constructor","state","user","post","comments","componentDidMount","id","props","match","params","postUrl","get","then","response","data","setState","userUrl","userId","commentsUrl","render","name","title","body","map","comment"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nclass PostShow extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            user: {},\n            post: {},\n            comments: []\n        }\n    }\n\n    componentDidMount() {\n        let id = this.props.match.params.id;\n\n        const postUrl = `https://jsonplaceholder.typicode.com/posts/${id}`;\n        axios.get(postUrl)\n        .then((response) => {\n            let post = response.data;\n            this.setState({ post })\n\n            const userUrl = `https://jsonplaceholder.typicode.com/users/${post.userId}`;\n            axios.get(userUrl)\n            .then((response) => {\n                let user = response.data;\n                this.setState({ user })\n            })\n        })\n\n        const commentsUrl = `https://jsonplaceholder.typicode.com/comments?postId=${id}`;\n        axios.get(commentsUrl)\n        .then((response) => {\n            let comments = response.data;\n            this.setState({ comments })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>USERNAME: {this.state.user.name}</h2>\n                <h2>TITLE: <b> {this.state.post.title} </b> </h2>\n                <h2>BODY:  \n                    <br />\n                    <b>{this.state.post.body}</b>\n                </h2>\n                <hr />\n                <h2>COMMENTS</h2>\n                <ul>\n                    {\n                        this.state.comments.map((comment) => {\n                            return <li key={comment.id}>{comment.body}</li>\n                        })\n                    }\n                </ul>\n                <hr />\n                <p> <Link to={`/users/${this.state.user.id}`}> More Posts of author: {this.state.user.name} </Link> </p>\n            </div>\n        )\n    }\n}\n\nexport default PostShow"]},"metadata":{},"sourceType":"module"}